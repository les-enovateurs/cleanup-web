name: Package Application with Nuitka

on:
  release:
    types: [created]
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            artifact_name: email_parser_macos
          - os: ubuntu-latest
            artifact_name: email_parser_linux
          - os: windows-latest
            artifact_name: email_parser_windows

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          onefile: true
          standalone: true
          enable-plugins: pyqt6
          output-file: ${{ matrix.artifact_name }}
          mode: app

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
          retention-days: 5
          include-hidden-files: true

      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checksums:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Generate SHA-256 checksums
      run: |
        cd dist
        for file in */*; do
          sha256sum "$file" > "${file}.sha256"
        done

    - name: Upload checksums
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*/*.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 