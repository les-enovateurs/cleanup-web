name: Package Application with PyInstaller

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          mode: standalone
          enable-plugins: pyside6

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
          include-hidden-files: true  

  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name email_parser_linux --windowed --add-data "requirements.txt:." main.py

    - uses: actions/upload-artifact@v4
      with:
        name: email_parser_linux
        path: dist/email_parser_linux
        retention-days: 5

    - name: Upload to Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/email_parser_linux
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name email_parser_macos --windowed --add-data "requirements.txt:." main.py

    - uses: actions/upload-artifact@v4
      with:
        name: email_parser_macos
        path: dist/email_parser_macos
        retention-days: 5

    - name: Upload to Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/email_parser_macos
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checksums:
    needs: [windows, linux, macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Generate SHA-256 checksums
      run: |
        cd dist
        for file in */*; do
          sha256sum "$file" > "${file}.sha256"
        done

    - name: Upload checksums
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*/*.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 