name: Build Release Executables

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']
        include:
          - os: ubuntu-latest
            output_name: email_parser_linux
          - os: windows-latest
            output_name: email_parser_windows.exe
          - os: macos-latest
            output_name: email_parser_macos

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name ${{ matrix.output_name }} --windowed --add-data "requirements.txt:." main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output_name }}
        path: dist/${{ matrix.output_name }}*
        retention-days: 5

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/${{ matrix.output_name }}*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate SHA-256 checksums
      run: |
        cd dist
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          certutil -hashfile ${{ matrix.output_name }} SHA256 > ${{ matrix.output_name }}.sha256
        else
          shasum -a 256 ${{ matrix.output_name }} > ${{ matrix.output_name }}.sha256
        fi

    - name: Upload checksums
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/${{ matrix.output_name }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 